!include "WinVer.nsh"
!include "Sections.nsh"
!include "x64.nsh"

Function InstallUpgradeDriver

  Pop $R0 ; .inf path
  Pop $R1 ; driver name

  DetailPrint 'pnputil.exe /add-driver "$R0" /install'
  DetailPrint "Installing $R1 driver..."
  ${DisableX64FSRedirection}
  nsExec::ExecToLog 'pnputil.exe /add-driver "$R0" /install'
  ${EnableX64FSRedirection}
  Pop $0
  StrCmp $0 "error" lbl_not_found
  StrCmp $0 "timeout" lbl_timeout
  IntCmp $0 "1" lbl_already_exists
  IntCmp $0 0 lbl_done
  DetailPrint "pnputil.exe reported an error: $0"
  Goto lbl_nodriver

lbl_not_found:
  DetailPrint "pnputil.exe not found"
  Goto lbl_nodriver

lbl_timeout:
  DetailPrint "Timeout waiting for pnputil.exe to run"
  Goto lbl_nodriver

lbl_already_exists:
  DetailPrint "Driver $R1 is already up-to-date"
  Goto lbl_nodriver

lbl_nodriver:
lbl_done:

FunctionEnd




Name "Brick Daemon <<BRICKD_VERSION>>"

OutFile "brickd_windows_<<BRICKD_UNDERSCORE_VERSION>>.exe"

XPStyle on

; The default installation directory
InstallDir "$PROGRAMFILES\Tinkerforge\Brickd"

; Registry key to check for directory (so if you install again, it will
; overwrite the old one automatically)
InstallDirRegKey HKLM "Software\Tinkerforge\Brickd" "Install_Dir"

; Request application privileges for Windows Vista
RequestExecutionLevel admin

;--------------------------------

!define BRICKD_VERSION <<BRICKD_VERSION>>

;--------------------------------

!macro macrouninstall

  ; Remove service
  DetailPrint "Unregister service..."
  IfFileExists "$INSTDIR\brickd_windows.exe" v1 v2

v1:
  nsExec::Exec '"$INSTDIR\brickd_windows.exe" stop'
  nsExec::Exec '"$INSTDIR\brickd_windows.exe" stop'
  nsExec::Exec '"$INSTDIR\brickd_windows.exe" remove'
  Goto unregister_done

v2:
  nsExec::Exec '"$INSTDIR\brickd.exe" --uninstall'

unregister_done:
  DetailPrint "Uninstall Brick Daemon..."

  RMDir /R "$INSTDIR"

  ; Remove current user (for backward compatibility) and all users menu shortcuts
  SetShellVarContext current
  Delete "$SMPROGRAMS\Tinkerforge\Brickd *.lnk"
  RMDir "$SMPROGRAMS\Tinkerforge"
  SetShellVarContext all
  Delete "$SMPROGRAMS\Tinkerforge\Brickd *.lnk"
  RMDir "$SMPROGRAMS\Tinkerforge"
  SetShellVarContext current

  ; Remove registry keys
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge" ; Remove old key too
  DeleteRegKey HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd"
  DeleteRegKey HKLM "Software\Tinkerforge\Brickd"

!macroend

; Pages

Page components
Page directory
Page instfiles

UninstPage uninstConfirm
UninstPage instfiles

;--------------------------------

Section /o "-Uninstall Brick Daemon" SEC_UNINSTALL_OLD

  !insertmacro macrouninstall

SectionEnd

;--------------------------------

; The stuff to install
Section "Install Brick Daemon ${BRICKD_VERSION}"
  SectionIn RO

  DetailPrint "Install Brick Daemon..."

  SetOutPath "$INSTDIR"
  File /r /x installer ..\*

  SetShellVarContext all
  CreateDirectory "$APPDATA\Tinkerforge\Brickd"
  IfFileExists "$APPDATA\Tinkerforge\Brickd\brickd.ini" done_ini copy_ini

copy_ini:
  CopyFiles "$INSTDIR\brickd-default.ini" "$APPDATA\Tinkerforge\Brickd\brickd.ini"

done_ini:
  CreateShortCut "$INSTDIR\brickd.ini.lnk" "$APPDATA\Tinkerforge\Brickd\brickd.ini"
  FileOpen $0 "$APPDATA\Tinkerforge\Brickd\brickd.log" a
  FileClose $0
  CreateShortCut "$INSTDIR\brickd.log.lnk" "$APPDATA\Tinkerforge\Brickd\brickd.log"
  SetShellVarContext current

  ; Write the installation path into the registry
  WriteRegStr HKLM "Software\Tinkerforge\Brickd" "Install_Dir" "$INSTDIR"
  WriteRegStr HKLM "Software\Tinkerforge\Brickd" "Version" ${BRICKD_VERSION}

  ; Write the uninstall keys for Windows
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "DisplayName" "Tinkerforge Brick Daemon ${BRICKD_VERSION}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "DisplayVersion" "${BRICKD_VERSION}"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "Publisher" "Tinkerforge GmbH"
  WriteRegStr HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "UninstallString" '"$INSTDIR\uninstall.exe"'
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "NoModify" 1
  WriteRegDWORD HKLM "Software\Microsoft\Windows\CurrentVersion\Uninstall\Tinkerforge Brickd" "NoRepair" 1
  WriteUninstaller "uninstall.exe"

  ; Create start menu shortcut for all users
  SetOutPath "$INSTDIR" ; set working directory for logviewer.exe
  SetShellVarContext all
  CreateDirectory "$SMPROGRAMS\Tinkerforge"
  CreateShortCut "$SMPROGRAMS\Tinkerforge\Brickd ${BRICKD_VERSION} - Log Viewer.lnk" "$INSTDIR\logviewer.exe"
  SetShellVarContext current

SectionEnd

;--------------------------------

Section "Register Brick Daemon ${BRICKD_VERSION} as Service"

  DetailPrint "Register as service..."
  nsExec::ExecToStack '"$INSTDIR\brickd.exe" --install'
  Pop $0 # return value/error/timeout
  Pop $1 # printed text, up to ${NSIS_MAX_STRLEN}
  IntCmp $0 0 done
  DetailPrint "Service registration failed with exit code $0"
  MessageBox MB_OK|MB_ICONEXCLAMATION "Service registration failed with exit code $0:$\n$\n$1"
done:

SectionEnd

;--------------------------------

Section /o "-Install/Update Brick Driver" SEC_INSTALL_BRICK_DRIVER

  Push "Brick"
  Push "$INSTDIR\drivers\brick\brick.inf"
  Call InstallUpgradeDriver

SectionEnd

;--------------------------------

Section /o "-Install/Update RED Brick Driver" SEC_INSTALL_RED_BRICK_DRIVER

  Push "RED Brick"
  Push "$INSTDIR\drivers\brick\red_brick.inf"
  Call InstallUpgradeDriver

SectionEnd

;--------------------------------

Section "Install/Update RED Brick Serial Console Driver"

  Push "RED Brick Serial Console"
  Push "$INSTDIR\drivers\serial_console\serial_console.inf"
  Call InstallUpgradeDriver

SectionEnd

;--------------------------------

Function .onInit

  ; Check to see if already installed
  ClearErrors
  ReadRegStr $0 HKLM "Software\Tinkerforge\Brickd" "Version"
  IfErrors not_installed ; Version not set

  SectionSetText ${SEC_UNINSTALL_OLD} "Uninstall Brick Daemon $0" ; make item visible
  IntOp $0 ${SF_SELECTED} | ${SF_RO}
  SectionSetFlags ${SEC_UNINSTALL_OLD} $0

not_installed:

  ; install (RED) Brick driver only on systems < Windows 8
${If} ${AtMostWin2008R2}
  SectionSetText ${SEC_INSTALL_BRICK_DRIVER} "Install/Update Brick Driver" ; make item visible
  SectionSetFlags ${SEC_INSTALL_BRICK_DRIVER} ${SF_SELECTED}

  SectionSetText ${SEC_INSTALL_RED_BRICK_DRIVER} "Install/Update RED Brick Driver" ; make item visible
  SectionSetFlags ${SEC_INSTALL_RED_BRICK_DRIVER} ${SF_SELECTED}
${EndIf}

FunctionEnd

;--------------------------------
; Uninstaller

Section "Uninstall"

  !insertmacro macrouninstall

SectionEnd
